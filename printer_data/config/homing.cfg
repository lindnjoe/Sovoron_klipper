# Cartogrpaher probe
[mcu cartographer]
serial: /dev/serial/by-id/usb-Cartographer_614e_26002F000E43304146393320-if00

[cartographer]
mcu: cartographer
x_offset: 0
y_offset: 63
backlash_comp: 0.00429
sensor: cartographer
sensor_alt: carto
mode: touch
mesh_runs: 2
verbose: yes
scanner_touch_threshold = 2550
scanner_touch_speed = 1
scanner_touch_z_offset = 0.175

[adxl345]
cs_pin: scanner:PA3
spi_bus: spi1

[resonance_tester]
accel_chip: adxl345
probe_points:
    175, 175, 20

[quad_gantry_level]          
gantry_corners:              
	-60,-10
	410,420
points:
	42,0
	42,240
	312,240
	312,0
speed: 300                  
horizontal_move_z: 3       
retry_tolerance: 0.0020    
retries: 10                 
max_adjust: 10

[bed_mesh]
zero_reference_position: 175, 175
speed: 300
horizontal_move_z: 3
mesh_min: 16, 59
mesh_max: 330, 305
probe_count: 50, 50
adaptive_margin: 10
algorithm: bicubic
mesh_pps: 0,0

[temperature_sensor Cartographer_MCU]
sensor_type: temperature_mcu
sensor_mcu: scanner
min_temp: 0
max_temp: 105

[homing_override]
axes: xyz
gcode:
  {% set x = 'X' in params or params|length == 1 %}
  {% set y = 'Y' in params or params|length == 1 %}
  {% set z = 'Z' in params or params|length == 1 %}

  {% if z %}
    G90
    SET_KINEMATIC_POSITION Z=0
    G0 Z5 F600
  {% endif %}

  {% if x %}
    _SENSORLESS_HOME_X
    G91 ; relative mode
    G0 X-60 F5000
  {% endif %}

  {% if y %}
   _SENSORLESS_HOME_Y
    G91 ; relative mode
    G0 Y-20 F5000
  {% endif %}
  G90 ; absolute mode

  {% if z %}
    G0 X175 Y175 F12000
    G28 Z
    G0 Z10
  {% endif %}

  INITIALIZE_TOOLCHANGER

[gcode_macro CARTOGRAPHER_TOUCH_WITH_TOOL_OFFSET]
gcode:
  CARTOGRAPHER_TOUCH
  _ADJUST_Z_POSITION_WITH_TOOL_OFFSET

[gcode_macro _ADJUST_Z_POSITION_WITH_TOOL_OFFSET]
gcode:
  {% set tool_name = printer.toolchanger.tool %}
  {% if tool_name %}
    {% set offset = printer[tool_name].gcode_z_offset %}
    SET_KINEMATIC_POSITION Z={printer.toolhead.position.z + offset}
  {% endif %}

[gcode_macro _SENSORLESS_HOME_X]
variable_home_current: 0.4
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro _SENSORLESS_HOME_X"].home_current}

    # Home
    G28 X
    # Move away
    G91
    G1 X-30 F1200
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}

[gcode_macro _SENSORLESS_HOME_Y]
variable_home_current: 0.4
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro _SENSORLESS_HOME_Y"].home_current}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-20 F1200
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}


# [gcode_macro homing_override_config]
# variable_sensorless_x: True
# variable_sensorless_y: True
# variable_homing_rebound_y: 10
# variable_stepper_driver: "tmc5160"
# variable_homing_current: 0.4
# gcode: 


# [homing_override]
# axes: xyz
# gcode:
#   INITIALIZE_TOOLCHANGER
#   {% if printer.probe.last_query %}
#     RESPOND TYPE=error MSG='Z Probe triggered, cannot home.'
#   {% else %}
#     SET_GCODE_OFFSET X=0.0 Y=0.0 Z=0.0
#     {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
#     {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
#     {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

#     {% set config = printer["gcode_macro homing_override_config"] %}


#     G90 ; absolute mode
#     {% if 'z' not in printer.toolhead.homed_axes %}
#       SET_KINEMATIC_POSITION Z=0
#       G0 Z10 F1000
#     {% elif printer.toolhead.position[2]|float < 10 %}
#       G0 Z10 F1000
#     {% endif %}

#     {% if home_all or 'Y' in params or 'X' in params %}
#       {% if config.sensorless_y %}
#         _SENSORLESS_HOME AXIS=Y
#       {% else %}
#         G28 Y
#       {% endif %}
#       G0 Y{ max_y - config.homing_rebound_y } F6000
#     {% endif %}

#     {% if home_all or 'X' in params %}
#       {% if config.sensorless_x %}
#         _SENSORLESS_HOME AXIS=X
#       {% else %}
#         G28 X
#       {% endif %}
#       G0 X{ max_x - 10} F6000
#     {% endif %}

#     {% if home_all or 'Z' in params %}
#       {% set random_x = (range(-50, 50) | random) / 10 %}
#       {% set random_y = (range(-50, 50) | random) / 10 %}

#       G90 ; absolute mode
#       M400
#       G0 X{( max_x / 2 ) + random_x} Y{( max_y / 2 ) + random_y} F12000
#       G28 Z
#       _ADJUST_Z_HOME_FOR_TOOL_OFFSET
#     {% endif %}
#     _APPLY_ACTIVE_TOOL_GCODE_OFFSETS
#     M400
#   {% endif %}



# ; Depending on the selected tool at the time of homing, the physical Z endstop position is offset.
# ; This corrects for that using current tool offset.
# [gcode_macro CARTOGRAPHER_TOUCH_WITH_TOOL_OFFSET]
# gcode:
#   CARTOGRAPHER_TOUCH
#   _ADJUST_Z_POSITION_WITH_TOOL_OFFSET

# [gcode_macro _ADJUST_Z_POSITION_WITH_TOOL_OFFSET]
# gcode:
#   {% set tool_name = printer.toolchanger.tool %}
#   {% if tool_name %}
#     {% set offset = printer[tool_name].gcode_z_offset %}
#     SET_KINEMATIC_POSITION Z={printer.toolhead.position.z + offset}
#   {% endif %}


# [gcode_macro TOOL_BED_MESH_CALIBRATE]
# gcode:
#       {% set tool_z_offset = printer[printer.toolchanger.tool].gcode_z_offset %}
#       G90 ; absolute mode
#       G0 Z10 F1000
#       # Bed mesh knows about the probe offset, but not about the tool offset.
#       SET_KINEMATIC_POSITION Z={10.0-tool_z_offset|float}
#       BED_MESH_CALIBRATE
#       G0 Z10 F1000
#       SET_KINEMATIC_POSITION Z={10.0+tool_z_offset|float}