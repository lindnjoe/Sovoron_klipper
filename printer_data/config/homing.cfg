# Cartogrpaher probe
[mcu cartographer]
serial: /dev/serial/by-id/usb-Cartographer_614e_26002F000E43304146393320-if00
restart_method: command

[cartographer]
mcu: cartographer
x_offset: 0
y_offset: 49
travel_speed: 400
verbose: yes


[cartographer scan]
probe_speed: 5
#   Speed (in mm/s) of the Z axis when probing. The default is 5mm/s.
mesh_runs: 1
#   Number of runs when doing a scan mesh.
#   Consecutive runs will trace back the way it came from.
#   The default is 1 run.
mesh_direction: x
#   Axis of which to do the most moves along - either 'x' or 'y'.
#   The default is the x-axis
mesh_height: 3
#   The height (in mm) of the head, when doing a mesh run.
#   The default is 3 mm.
mesh_path: snake
#   The path to use when calibrating a scan mesh - either 'snake',
#   'alternating_snake', 'spiral' or 'random'.
#   The default is snake.

[cartographer touch]
samples: 5
#   The number of samples to use when doing a touch.
#   The default is 5.
max_samples: 10
#   The maximum number of samples to do before giving up.
#   The default is samples * 2.
UNSAFE_max_touch_temperature: 152
#   The maximum allowed nozzle temperature to use when touching the plate.
#   This is set to 150C to avoid damaging your plate.
#   Change this AT YOUR OWN RISK.
#   The default is 150C.

[cartographer coil]
name: cartographer_coil
#   The name of the coil temperature sensor.
#   The default is 'cartographer_coil'.
min_temp: 0
#   The minimum temperature of the coil, below this will trigger a warning.
#   The default is 0.
max_temp: 105
#   The maximum temperature of the coil, above this will trigger a warning.
#   The default is 105.

[adxl345]
cs_pin: cartographer:PA3
spi_bus: spi1

[resonance_tester]
accel_chip: adxl345
probe_points:
    175, 175, 20

[quad_gantry_level]          
gantry_corners:              
	-60,-10
	410,420
points:
	42,0
	42,240
	312,240
	312,0
speed: 500                  
horizontal_move_z: 2       
retry_tolerance: 0.005    
retries: 10                 
max_adjust: 10

[bed_mesh]
zero_reference_position: 175, 175
speed: 500
horizontal_move_z: 3
mesh_min: 16, 45
mesh_max: 330, 335
probe_count: 30, 30
adaptive_margin: 10
algorithm: bicubic
mesh_pps: 0,0

[temperature_sensor Cartographer]
sensor_type: temperature_mcu
sensor_mcu: cartographer
min_temp: 0
max_temp: 105

[homing_override]
axes: xyz
gcode:
  {% set x = 'X' in params or params|length == 1 %}
  {% set y = 'Y' in params or params|length == 1 %}
  {% set z = 'Z' in params or params|length == 1 %}
  INITIALIZE_TOOLCHANGER
  #START_TOOL_CRASH_DETECTION
  {% if z %}
    G90
    SET_KINEMATIC_POSITION Z=0
    G0 Z5 F600
  {% endif %}

  {% if x %}
    _SENSORLESS_HOME_X
    G91 ; relative mode
    G0 X-10 F5000
  {% endif %}

  {% if y %}
   _SENSORLESS_HOME_Y
    G91 ; relative mode
    G0 Y-20 F5000
  {% endif %}
  G90 ; absolute mode

  {% if z %}
    G0 X175 Y175 F12000
     SET_VELOCITY_LIMIT VELOCITY=10
      G28 Z
      SET_VELOCITY_LIMIT ACCEL={MAX_ACCEL} VELOCITY={MAX_VELOCITY}
    #G28 Z
    G0 Z10
  {% endif %}
  #STOP_TOOL_CRASH_DETECTION

[gcode_macro DATA_SAMPLE]
gcode:
  {% set bed_temp = params.BED_TEMP|default(90)|int %}
  {% set nozzle_temp = params.NOZZLE_TEMP|default(250)|int %}
  {% set min_temp = params.MIN_TEMP|default(40)|int %}
  {% set max_temp = params.MAX_TEMP|default(65)|int %}
  G90
  M106 S255
  RESPOND TYPE=command MSG='Waiting for Coil to cool to 40'
  M117 Waiting for Coil to cool to 40
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MAXIMUM={min_temp}
  RESPOND TYPE=command MSG='Starting Phase 1 of 4'
  M117 Starting Phase 1 of 4
  M106 S0
  G28
  G0 Z1
  M104 S{nozzle_temp}
  M140 S{bed_temp}
  G4 P1000
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MINIMUM={min_temp}
  CARTOGRAPHER_STREAM FILENAME=data1
  M117 Waiting for Coil to heat to 70
  RESPOND TYPE=command MSG='Waiting for Coil to heat to 70'
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MINIMUM={max_temp}
  CARTOGRAPHER_STREAM FILENAME=data1
  M104 S0
  M140 S0
  M106 S255
  G0 Z80
  RESPOND TYPE=command MSG='Waiting for Coil to cool to 40'
  M117 Waiting for Coil to cool to 40
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MAXIMUM={min_temp}
  M117 Starting Phase 2 of 4
  RESPOND TYPE=command MSG='Starting Phase 2 of 4'
  M106 S0
  G28 Z0
  G0 Z2
  M104 S{nozzle_temp}
  M140 S{bed_temp}
  G4 P1000
  CARTOGRAPHER_STREAM FILENAME=data2
  M117 Waiting for Coil to heat to 70
  RESPOND TYPE=command MSG='Waiting for Coil to heat to 70'
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MINIMUM={max_temp}
  CARTOGRAPHER_STREAM FILENAME=data2
  M104 S0
  M140 S0
  M106 S255
  G0 Z80
  RESPOND TYPE=command MSG='Waiting for Coil to cool to 40'
  M117 Waiting for Coil to cool to 40
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MAXIMUM={min_temp}
  M117 "Starting Phase 3 of 4"
  RESPOND TYPE=command MSG='Starting Phase 3 of 4'
  M106 S0
  G28 Z0
  G0 Z3
  M104 S{nozzle_temp}
  M140 S{bed_temp}
  G4 P1000
  CARTOGRAPHER_STREAM FILENAME=data3
  M117 Waiting for Coil to heat to 70
  RESPOND TYPE=command MSG='Waiting for Coil to heat to 70'
  TEMPERATURE_WAIT SENSOR='temperature_sensor cartographer_coil' MINIMUM={max_temp}
  CARTOGRAPHER_STREAM FILENAME=data3
  M104 S0
  M140 S0
  RESPOND TYPE=command MSG='Testing complete, please move files using: mv ~/klipper/data1 ~/klipper/data2 ~/klipper/data3 ~/cartographer-klipper/'
  M117 "Testing complete, please move files using: mv ~/klipper/data1 ~/klipper/data2 ~/klipper/data3 ~/cartographer-klipper/"
  RESPOND TYPE=command MSG='Follow the remaining instructions here: https://docs.cartographer3d.com/cartographer-probe/advanced-features/temperature-differential-calibration-beta'
  M117 "Follow the remaining instructions here: https://docs.cartographer3d.com/cartographer-probe/advanced-features/temperature-differential-calibration-beta"

[gcode_macro CARTOGRAPHER_TOUCH_WITH_TOOL_OFFSET]
gcode:
  CARTOGRAPHER_TOUCH
  _ADJUST_Z_POSITION_WITH_TOOL_OFFSET

[gcode_macro _ADJUST_Z_POSITION_WITH_TOOL_OFFSET]
gcode:
  {% set tool_name = printer.toolchanger.tool %}
  {% if tool_name %}
    {% set offset = printer[tool_name].gcode_z_offset %}
    SET_KINEMATIC_POSITION Z={printer.toolhead.position.z + offset}
  {% endif %}

[gcode_macro _SENSORLESS_HOME_X]
variable_home_current: 0.5
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro _SENSORLESS_HOME_X"].home_current}

    # Home
    G28 X
    # Move away
    G91
    G1 X-60 F1200
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}

[gcode_macro _SENSORLESS_HOME_Y]
variable_home_current: 0.5
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={printer["gcode_macro _SENSORLESS_HOME_Y"].home_current}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-175 F1200
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}


# [gcode_macro homing_override_config]
# variable_sensorless_x: True
# variable_sensorless_y: True
# variable_homing_rebound_y: 10
# variable_stepper_driver: "tmc5160"
# variable_homing_current: 0.4
# gcode: 


# [homing_override]
# axes: xyz
# gcode:
#   INITIALIZE_TOOLCHANGER
#   {% if printer.probe.last_query %}
#     RESPOND TYPE=error MSG='Z Probe triggered, cannot home.'
#   {% else %}
#     SET_GCODE_OFFSET X=0.0 Y=0.0 Z=0.0
#     {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
#     {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
#     {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

#     {% set config = printer["gcode_macro homing_override_config"] %}


#     G90 ; absolute mode
#     {% if 'z' not in printer.toolhead.homed_axes %}
#       SET_KINEMATIC_POSITION Z=0
#       G0 Z10 F1000
#     {% elif printer.toolhead.position[2]|float < 10 %}
#       G0 Z10 F1000
#     {% endif %}

#     {% if home_all or 'Y' in params or 'X' in params %}
#       {% if config.sensorless_y %}
#         _SENSORLESS_HOME AXIS=Y
#       {% else %}
#         G28 Y
#       {% endif %}
#       G0 Y{ max_y - config.homing_rebound_y } F6000
#     {% endif %}

#     {% if home_all or 'X' in params %}
#       {% if config.sensorless_x %}
#         _SENSORLESS_HOME AXIS=X
#       {% else %}
#         G28 X
#       {% endif %}
#       G0 X{ max_x - 10} F6000
#     {% endif %}

#     {% if home_all or 'Z' in params %}
#       {% set random_x = (range(-50, 50) | random) / 10 %}
#       {% set random_y = (range(-50, 50) | random) / 10 %}

#       G90 ; absolute mode
#       M400
#       G0 X{( max_x / 2 ) + random_x} Y{( max_y / 2 ) + random_y} F12000
#       G28 Z
#       _ADJUST_Z_HOME_FOR_TOOL_OFFSET
#     {% endif %}
#     _APPLY_ACTIVE_TOOL_GCODE_OFFSETS
#     M400
#   {% endif %}



# ; Depending on the selected tool at the time of homing, the physical Z endstop position is offset.
# ; This corrects for that using current tool offset.
# [gcode_macro CARTOGRAPHER_TOUCH_WITH_TOOL_OFFSET]
# gcode:
#   CARTOGRAPHER_TOUCH
#   _ADJUST_Z_POSITION_WITH_TOOL_OFFSET

# [gcode_macro _ADJUST_Z_POSITION_WITH_TOOL_OFFSET]
# gcode:
#   {% set tool_name = printer.toolchanger.tool %}
#   {% if tool_name %}
#     {% set offset = printer[tool_name].gcode_z_offset %}
#     SET_KINEMATIC_POSITION Z={printer.toolhead.position.z + offset}
#   {% endif %}


# [gcode_macro TOOL_BED_MESH_CALIBRATE]
# gcode:
#       {% set tool_z_offset = printer[printer.toolchanger.tool].gcode_z_offset %}
#       G90 ; absolute mode
#       G0 Z10 F1000
#       # Bed mesh knows about the probe offset, but not about the tool offset.
#       SET_KINEMATIC_POSITION Z={10.0-tool_z_offset|float}
#       BED_MESH_CALIBRATE
#       G0 Z10 F1000
#       SET_KINEMATIC_POSITION Z={10.0+tool_z_offset|float}