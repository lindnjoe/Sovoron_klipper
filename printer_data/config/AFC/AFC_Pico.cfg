[mcu Pico]
serial: /dev/serial/by-id/usb-Klipper_rp2040_455035712909FFF8-if00

[gcode_macro AFC_PARK]
;rename_existing: AFC_PARK1
gcode:
  UNSELECT_TOOL
  
[gcode_macro AFC_Toolchange_Demo]
 gcode:
  T1
  #G4 P1000
  T2
  #G4 P1000
  T3
  #G4 P1000
  T4
  #G4 P1000
  T6
  #G4 P1000
  T5
  #G4 P1000
  T9
  #G4 P1000
  T0


[gcode_macro LOAD_NOZZLE]

gcode:
  {% set lane = printer['AFC'].current_load %}

  {% if lane in ['lane0', 'lane1', 'lane2', 'lane3'] %}
    AFC_POOP
    AFC_KICK
  
  {% else %}
    {% set msg = "Lane already loaded from AMS " ~ lane %}
    M117 {msg}
    RESPOND PREFIX=AFC1 MSG="{msg}"
  {% endif %}

[gcode_macro AFC_MAP_RESET]
gcode:
 RESET_AFC_MAPPING


[gcode_macro AFC1]
gcode:
  {% set lane = printer['AFC'].next_lane %}

  {% if lane in ['lane0', 'lane1', 'lane2', 'lane3'] %}
    AFC
      
  {% elif lane == 'lane4' %}
   # SAFE_UNLOAD_FILAMENT1
    #CUT_FILAMENT1

  {% elif lane == 'lane6' %}
    #SAFE_UNLOAD_FILAMENT1
    #CUT_FILAMENT1

  {% elif lane == 'lane7' %}
    #SAFE_UNLOAD_FILAMENT1
   # CUT_FILAMENT1

  {% elif lane == 'lane8' %}
    #SAFE_UNLOAD_FILAMENT1
   # CUT_FILAMENT1 

  {% elif lane == 'lane5' %}
    #SAFE_UNLOAD_FILAMENT2
   # CUT_FILAMENT2

  {% elif lane == 'lane9' %}
    #SAFE_UNLOAD_FILAMENT2
   # CUT_FILAMENT2

  {% elif lane == 'lane10' %}
    #SAFE_UNLOAD_FILAMENT2
   # CUT_FILAMENT2

  {% elif lane == 'lane11' %}
    #SAFE_UNLOAD_FILAMENT2
   # CUT_FILAMENT2    
    
  {% else %}
    {% set msg = "Invalid lane/tool in AFC: " ~ lane %}
    M117 {msg}
    RESPOND PREFIX=AFC1 MSG="{msg}"
  {% endif %}



[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: _QUAD_GANTRY_LEVEL
gcode:
    # If QGL is not applied, first run a course calibration
    {% if printer.quad_gantry_level.applied == False %}
        _QUAD_GANTRY_LEVEL RETRY_TOLERANCE=1.0
    {% endif %}
    # then perform fine QGL down to desired spec
    # this has to be a separate macro call so the results of the above call will be visible!
    _FINE_QUAD_GANTRY_LEVEL

[gcode_macro _FINE_QUAD_GANTRY_LEVEL]
gcode:
    {% if printer.quad_gantry_level.applied == True %}
        # go for full quality at reduced probing height
        _QUAD_GANTRY_LEVEL HORIZONTAL_MOVE_Z=1.0  # <- set your preferred probing height here!
    {% else %}
        # This should never happen, just perform the full calibration using the defaults
        {action_respond_info("Fine QGL called without calling course QGL first!")}
        _QUAD_GANTRY_LEVEL  # default behavior, no speedup
    {% endif %}
