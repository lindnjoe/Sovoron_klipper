[save_variables]
filename: ~/printer_data/config/variables.cfg


[gcode_macro SET_PRESSURE_ADVANCE]
rename_existing: SET_PRESSURE_ADVANCE_X
gcode:
  {% if printer.print_stats.state == "printing" and params.ADVANCE is defined and params.ADVANCE|float == 0.0 %}
    # Do nothing
  {% else %}
    SET_PRESSURE_ADVANCE_X {rawparams}
  {% endif %}


[gcode_macro SELECT_TOOL]
rename_existing: SELECT_TOOL1
gcode:
   {% set newtool = params.T | int %}
   
   {% if newtool == 0 or newtool == 1 or newtool == 2 or newtool == 3 %}
   SELECT_TOOL1 T={newtool}
   {% elif newtool == 4 or newtool == 6 or newtool == 7 or newtool == 8 %}
   SELECT_TOOL1 T=4
   H{params.T}.1
   {% elif newtool == 5 or newtool == 9 or newtool == 10 or newtool == 11 %}
   SELECT_TOOL1 T=5
   H{params.T}.1
   {% endif %}
  
[gcode_macro H4.1]
gcode:
  _TX1 GROUP=T4

[gcode_macro H5.1]
gcode:
  _TX2 GROUP=T5

[gcode_macro H6.1]
gcode:
  _TX1 GROUP=T6
  
[gcode_macro H7.1]
gcode:
  _TX1 GROUP=T7 

[gcode_macro H8.1]
gcode:
  _TX1 GROUP=T8   
  
[gcode_macro H9.1]
gcode:
  _TX2 GROUP=T9   

[gcode_macro H10.1]
gcode:
  _TX2 GROUP=T10   

[gcode_macro H11.1]
gcode:
  _TX2 GROUP=T11  


[gcode_macro T0]
variable_tool: 0
variable_spool_id: None
variable_pressure_advance: .02
variable_color: ""
gcode:
  # {% if pressure_advance != None %}
  #   SET_PRESSURE_ADVANCE EXTRUDER={printer[printer.toolchanger.tool_names[tool]].extruder} ADVANCE={pressure_advance}
  # {% endif %}
  MAP_TOOL T=0

[gcode_macro T1]
variable_tool: 1
variable_spool_id: None
variable_pressure_advance: .02
variable_color: ""
gcode:
  # {% if pressure_advance != None %}
  #   SET_PRESSURE_ADVANCE EXTRUDER={printer[printer.toolchanger.tool_names[tool]].extruder} ADVANCE={pressure_advance}
  # {% endif %}
  MAP_TOOL T=1

[gcode_macro T2]
variable_tool: 2
variable_spool_id: None
variable_pressure_advance: .02
variable_color: ""
gcode:
  # {% if pressure_advance != None %}
  #   SET_PRESSURE_ADVANCE EXTRUDER={printer[printer.toolchanger.tool_names[tool]].extruder} ADVANCE={pressure_advance}
  # {% endif %}
  MAP_TOOL T=2

[gcode_macro T3]
variable_tool: 3
variable_spool_id: None
variable_pressure_advance: .02
variable_color: ""
gcode:
  # {% if pressure_advance != None %}
  #   SET_PRESSURE_ADVANCE EXTRUDER={printer[printer.toolchanger.tool_names[tool]].extruder} ADVANCE={pressure_advance}
  # {% endif %}
  MAP_TOOL T=3
  
[gcode_macro T4]
variable_tool: 4
variable_spool_id: None
variable_pressure_advance: .02
variable_color: ""
gcode:
  # {% if pressure_advance != None %}
  #   SET_PRESSURE_ADVANCE EXTRUDER={printer[printer.toolchanger.tool_names[tool]].extruder} ADVANCE={pressure_advance}
  # {% endif %}
  MAP_TOOL T=4

[gcode_macro T5]
variable_tool: 5
variable_spool_id: None
variable_pressure_advance: .02
variable_color: ""
variable_nozzle_diameter: 0.400
gcode:
  # {% if pressure_advance != None %}
  #   SET_PRESSURE_ADVANCE EXTRUDER={printer[printer.toolchanger.tool_names[tool]].extruder} ADVANCE={pressure_advance}
  # {% endif %}
  MAP_TOOL T=5

[gcode_macro T6]
variable_tool: 6
variable_spool_id: None
variable_pressure_advance: .02
variable_color: ""
variable_nozzle_diameter: 0.400
gcode:
  # {% if pressure_advance != None %}
  #   SET_PRESSURE_ADVANCE EXTRUDER={printer[printer.toolchanger.tool_names[tool]].extruder} ADVANCE={pressure_advance}
  # {% endif %}
  MAP_TOOL T=6

[gcode_macro T7]
variable_tool: 7
variable_spool_id: None
variable_pressure_advance: .02
variable_color: ""
gcode:
  # {% if pressure_advance != None %}
  #   SET_PRESSURE_ADVANCE EXTRUDER={printer[printer.toolchanger.tool_names[tool]].extruder} ADVANCE={pressure_advance}
  # {% endif %}
  MAP_TOOL T=7
  
[gcode_macro T8]
variable_tool: 8
variable_spool_id: None
variable_pressure_advance: .02
variable_color: ""
gcode:
  # {% if pressure_advance != None %}
  #   SET_PRESSURE_ADVANCE EXTRUDER={printer[printer.toolchanger.tool_names[tool]].extruder} ADVANCE={pressure_advance}
  # {% endif %}
  MAP_TOOL T=8

[gcode_macro T9]
variable_tool: 9
variable_spool_id: None
variable_pressure_advance: .02
variable_color: ""
gcode:
  # {% if pressure_advance != None %}
  #   SET_PRESSURE_ADVANCE EXTRUDER={printer[printer.toolchanger.tool_names[tool]].extruder} ADVANCE={pressure_advance}
  # {% endif %}
  MAP_TOOL T=9

[gcode_macro T10]
variable_tool: 10
variable_spool_id: None
variable_pressure_advance: .02
variable_color: ""
gcode:
  # {% if pressure_advance != None %}
  #   SET_PRESSURE_ADVANCE EXTRUDER={printer[printer.toolchanger.tool_names[tool]].extruder} ADVANCE={pressure_advance}
  # {% endif %}
  MAP_TOOL T=10

[gcode_macro T11]
variable_tool: 11
variable_spool_id: None
variable_pressure_advance: .02
variable_color: ""
gcode:
  # {% if pressure_advance != None %}
  #   SET_PRESSURE_ADVANCE EXTRUDER={printer[printer.toolchanger.tool_names[tool]].extruder} ADVANCE={pressure_advance}
  # {% endif %}
  MAP_TOOL T=11  
  


# [gcode_macro T12]
# gcode:
#   MAP_TOOL T=12



[gcode_macro MAP_TOOL]
gcode:
  {% set tool = params.T | int %}
  {% set tool_map = printer.save_variables.variables.tool_map %}  # Expecting an integer array
  
  {% if tool_map is iterable and tool >= 0 and tool < tool_map | count %}
  {% set target_tool = tool_map[tool] %}
    SELECT_TOOL T={target_tool}
   {% else %}
     SELECT_TOOL T={tool}
   {% endif %}



[gcode_macro SET_TOOL_MAPPING]
gcode:
  {% if params.T is defined and params.TOOL is defined %}
    {% set t = params.T | int %}
    {% set tool = params.TOOL | int %}
    {% if t >= 0 and t <= 11 and tool >= 0 and tool <= 11 %}
      {% set tool_map = printer.save_variables.variables.tool_map | default([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) %}
      {% set tool_map = tool_map[:t] + [tool] + tool_map[t+1:] %}
      SAVE_VARIABLE VARIABLE=tool_map VALUE="{tool_map}"
    {% else %}
      {action_raise_error("T and TOOL numbers must be 0-11.")}
    {% endif %}
  {% else %}
    {action_raise_error("Specify T and TOOL parameters.")}
  {% endif %}

[gcode_macro RESET_TOOL_MAPPING]
gcode:
  {% set tool_map = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] %}
  SAVE_VARIABLE VARIABLE=tool_map VALUE="{tool_map}"


[gcode_macro SET_TOOL_COLOR]
description: [T<number>] [COLOR<hexstring>]
  Set tool's filament color.
  TOOL= Physical tool number
  COLOR= RGB hex string
gcode:
  {% if params.TOOL is defined and params.COLOR is defined %} 
    {% set tool = params.TOOL|int %}
    {% set color = params.COLOR|string %}
    
    {% if printer.save_variables.variables.filament_colors is defined %}
        {% set filament_colors = printer.save_variables.variables.filament_colors %}        
        {% if tool >= 0 and tool < filament_colors|length %}
            {% set filament_colors = filament_colors[:tool] + [color] + filament_colors[tool+1:] %}
            SAVE_VARIABLE VARIABLE=filament_colors VALUE='{filament_colors | tojson}'
        {% else %}
            {action_raise_error("Tool number out of range.")}
        {% endif %}
    {% else %}
        {action_raise_error("Filament colors variable not found.")}
    {% endif %}
  {% else %}
    {action_raise_error("Specify TOOL and COLOR parameters.")}
  {% endif %}

[gcode_macro SET_TOOL_MATERIAL]
description: [T<number>] [MATERIAL<string>]
  Set tool's filament material.
  TOOL= Physical tool number
  MATERIAL= string, e.g. PLA, ABS, ...
gcode:
  {% if params.TOOL is defined and params.MATERIAL is defined %} 
    {% set tool = params.TOOL|int %}
    {% set material = params.MATERIAL|string %}
    
    {% if printer.save_variables.variables.filament_types is defined %}
        {% set filament_types = printer.save_variables.variables.filament_types %}        
        {% if tool >= 0 and tool < filament_types|length %}
            {% set filament_types = filament_types[:tool] + [material] + filament_types[tool+1:] %}
            SAVE_VARIABLE VARIABLE=filament_types VALUE='{filament_types | tojson}'
        {% else %}
            {action_raise_error("Tool number out of range.")}
        {% endif %}
    {% else %}
        {action_raise_error("Filament types variable not found.")}
    {% endif %}
  {% else %}
    {action_raise_error("Specify TOOL and MATERIAL parameters.")}
  {% endif %}

[gcode_macro SET_TOOL_PRESSURE_ADVANCE]
description: [TOOL<number>] [ADVANCE<number>]
  Set tool pressure advance.
  TOOL= Physical tool number
gcode:
  {% if params.T is defined and params.TOOL is defined %}
    SET_GCODE_VARIABLE MACRO=T{params.T} VARIABLE=tool VALUE={params.TOOL}
  {% else %}
    {action_raise_error("Specify T and TOOL parameters.")}
  {% endif %}

[gcode_macro M104]
rename_existing: M104.1
description: [T<index>] [S<temperature>]
  Set tool temperature.
  T= Tool number, optional. If this parameter is not provided, the current tool is used.
  S= Target temperature
gcode:
  {% if params.T is defined %}
    {% set tool = params.T | int %}
    {% set tool_map = printer.save_variables.variables.tool_map %}
    {% if tool_map is iterable and tool >= 0 and tool < tool_map | count %}
      {% set target_tool = tool_map[tool] %}
    {% else %}
      {% set target_tool = tool %}
    {% endif %}
    {% set newparameters = " T="~target_tool %}
    {% if params.S is defined %}
      {% set newparameters = newparameters ~ " TARGET="~params.S %}
    {% endif %}
    SET_TOOL_TEMPERATURE{newparameters}
  {% else %}
    M104.1 {rawparams}
  {% endif %}

[gcode_macro M109]
rename_existing: M109.1
description: [T<index>] [S<temperature>] [D<Deadband>]
  Set tool temperature and wait.
  T= Tool number [optional]. If this parameter is not provided, the current tool is used.
  S= Target temperature
  D= Dead-band, allows the temperature variance +/- the deadband
variable_default_deadband: 10.0
gcode:
    {% set s = params.S|float %}
    {% set deadband = default_deadband|float %}
    {% set tn = printer.tool_probe_endstop.active_tool_number|int %}
    {% if params.D is defined %}
        {% set deadband = params.D|float %}
    {% endif %}
    {% if params.T is defined %}
      {% set tool = params.T | int %}
      {% set tool_map = printer.save_variables.variables.tool_map %}
      {% if tool_map is iterable and tool >= 0 and tool < tool_map | count %}
        {% set tn = tool_map[tool] %}
      {% endif %}
    {% endif %}
    {% set tool_name = printer.toolchanger.tool_names[tn]|default('') %}
    {% set extruder = printer[tool_name].extruder %}

    SET_HEATER_TEMPERATURE HEATER={extruder} TARGET={s}
    {% if s > 0 %}
        TEMPERATURE_WAIT SENSOR={extruder} MINIMUM={s-(deadband/2)} MAXIMUM={s+(deadband/2)}   ; Wait for hotend temp (within D degrees)
    {% endif %}
